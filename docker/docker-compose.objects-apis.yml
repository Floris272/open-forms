version: '3'

services:
  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]

  db:
    image: postgis/postgis:${PG_VERSION:-14-master}
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./objects-apis/docker-init-objects-apis-db/:/docker-entrypoint-initdb.d
      - objects-apis-db:/var/lib/postgresql/data
    networks:
      - open-forms-dev

  objecttypes-web:
    image: maykinmedia/objecttypes-api:${OBJECTTYPES_VERSION:-2.1.1}
    environment:
      - DJANGO_SETTINGS_MODULE=objecttypes.conf.docker
      - SECRET_KEY=${SECRET_KEY:-fgv=c0hz&tl*8*3m3893@m+1pstrvidc9e^5@fpspmg%cy$15d}
      - ALLOWED_HOSTS=*
    ports:
      - 8001:8000
    depends_on:
      - db
    networks:
      - open-forms-dev

  objects-web:
    image: maykinmedia/objects-api:${OBJECTS_VERSION:-2.3.0}
    environment: &objects_web_env
      - DJANGO_SETINGS_MODULE=objects.conf.docker
      - SECRET_KEY=${SECRET_KEY:-fgv=c0hz&tl*8*3m3893@m+1pstrvidc9e^5@fpspmg%cy$15d}
      - ALLOWED_HOSTS=*
      - DISABLE_2FA=True
    ports:
      - 8002:8000
    depends_on:
      - db
      - redis
    networks:
      - open-forms-dev

  celery:
    image: maykinmedia/objects-api:${OBJECTS_VERSION:-2.3.0}
    environment: *objects_web_env
    command: /celery_worker.sh
    depends_on:
      - db
      - redis
    networks:
      - open-forms-dev

volumes:
  objects-apis-db:

networks:
  open-forms-dev:
    name: open-forms-dev
